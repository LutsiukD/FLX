{"version":3,"sources":["main.js","playGame.js"],"names":["myMove","compMove","rounds","myWins","turns","rockBtn","document","querySelector","paperBtn","onclick","resetData","playGame","scissorsBtn","printLogs","current","template","concat","logNode","createElement","classList","add","innerHTML","result","appendCild","reset","min","max","rand","Math","random","floor","randomNumber","alert"],"mappings":"aAAA,IAGAA,EACAC,EAJAC,EAAA,EACAC,EAAA,EAIAC,EAAA,CAAA,OAAA,QAAA,YAIAC,GAFAC,SAAAC,cAAA,WAEAD,SAAAC,cAAA,SACAC,EAAAF,SAAAC,cAAA,SACAD,SAAAC,cAAA,YACAD,SAAAC,cAAA,aAEAE,QAAA,WAAA,OAAAC,KACAL,EAAAI,QAAA,WACAT,EAAA,OACAW,KAEAH,EAAAC,QAAA,WACAT,EAAA,SAGAY,YAAAH,QAAA,WACAT,EAAA,WACAW,KAIA,IAMAE,EAAA,SAAAC,GACA,IAAAC,EAAA,UAAAC,OAAAd,EAAA,OAAAc,OAAAhB,EAAA,SAAAgB,OAAAf,EAAA,aAAAe,OAAAF,EAAA,KACAG,EAAAX,SAAAY,cAAA,OACAD,EAAAE,UAAAC,IAAA,OACAH,EAAAI,UAAAN,EACAO,OAAAC,WAAAN,IAGAP,EAAA,WAMAc,MAAAH,UAAA,ICjDAV,EAAA,WACAR,EAAA,GACAF,EAAAG,ED2BA,SAAAqB,EAAAC,GACA,IAAAC,EAAAF,EAAAG,KAAAC,UAAAH,EAAA,EAAAD,GAEA,OADAE,EAAAC,KAAAE,MAAAH,GC7BAI,CAAA,EAAA,KACA,aAAA/B,GAAA,UAAAC,GACA,UAAAD,GAAA,SAAAC,GACA,SAAAD,GAAA,aAAAC,KACAE,IACAD,IACAW,EAAA,SAEA,UAAAb,GAAA,aAAAC,GACA,SAAAD,GAAA,UAAAC,GACA,aAAAD,GAAA,SAAAC,KACAE,IACAD,IACAW,EAAA,WDbA,ECgBAV,EACA6B,MAAA,+BAGAA,MAAA,+BAFAtB","file":"app.js","sourcesContent":["let rounds = 0;\r\nlet myWins = 0;\r\nlet compWins = 0;\r\nlet myMove;\r\nlet compMove;\r\nlet turns = ['Role','Paper','Scissors'];\r\n\r\nconst results = document.querySelector('results');\r\n\r\nconst rockBtn = document.querySelector('rock');\r\nconst paperBtn = document.querySelector('paper');\r\nconst csissorsBtn = document.querySelector('scissors');\r\nconst resetBtn = document.querySelector('reset-btn');\r\n\r\nresetBtn.onclick = () => resetData();\r\nrockBtn.onclick = () => {\r\n\tmyMove = 'Rock';\r\n\tplayGame();\r\n}\r\npaperBtn.onclick = () => {\r\n\tmyMove = 'Paper';\r\n\t\r\n}\r\nscissorsBtn.onclick = () => {\r\n\tmyMove = 'Scissors';\r\n\tplayGame();\r\n}\r\n\r\n\r\nconst randomNumber = (min, max) => {\r\n    let rand = min + Math.random() * (max + 1 - min);\r\n    rand = Math.floor(rand);\r\n    return rand;\r\n}\r\n\r\nconst printLogs = (current) => {\r\n\tlet template = `“Round ${rounds},  ${myMove} vs. ${compMove}, You’ve ${current}!`;\r\n\tlet logNode = document.createElement('div');\r\n\tlogNode.classList.add('log');\r\n\tlogNode.innerHTML = template;\r\n\tresult.appendCild(logNode);\r\n}\r\n\r\nconst resetData = () => {\r\n\tlet rounds = 0;\r\n\tlet myWins = 0;\r\n\tlet compWins = 0;\r\n\tlet myMove = 0;\r\n\tlet compMove = 0;\r\n\treset.innerHTML = '';\r\n}\r\n\r\n\r\n","const playGame = () => {\r\n\tif(myWins < 3 && compWins < 3) {\r\n\t\tcompMove = turns[randomNumber(0,2)];\r\n\t\tif(myMove === 'Scissors' && compMove === 'Paper' ||\r\n\t\t   myMove === 'Paper' && compMove === 'Rock' ||\r\n\t\t   myMove === 'Rock' && compMove === 'Scissors') {\r\n\t\t\tmyWins++;\r\n\t\t    rounds++;\r\n\t\t    printLogs('WON');\r\n\t\t}\r\n\t\tif(myMove === 'Paper' && compMove === 'Scissors' ||\r\n\t\t   myMove === 'Rock' && compMove === 'Paper' ||\r\n\t\t   myMove === 'Scissors' && compMove === 'Rock') {\r\n\t\t\tmyWins++;\r\n\t\t    rounds++;\r\n\t\t    printLogs('LOST');\r\n\t\t}\r\n\t} else {\r\n\t\tif(myWins > compWins) {\r\n\t\t\talert('Congratulation! You\\'ve WON!')\r\n\t\t\tresetData();\r\n\t\t} else {\r\n\t\t\talert('Unfortunately You\\'ve LOSED!')\r\n\t\t\tresetData();\r\n\t\t}\r\n\t}\r\n}"]}